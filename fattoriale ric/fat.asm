TITLE sch

.MODEL small            ; INDICA AL COMPILATORE IL MODELLO DI MEMORIA DA USARE
.STACK 100h             ; DIMENSIONA LO STAC

.DATA        
    ; VARIABILI
    _NUMINT dw 0h       ; NUMERO DA LEGGERE/SCRIVERE
    _DIECI dw 0ah
    
    _FATT DW ?
    _CONT DW ?
    
    ; STRINGHE
    inp db "Inserire un numero: $"
    oup db "Fattoriale: $"
    
        
.CODE                   ; INIZIO DEL SEGMENTO DI CODICE
.STARTUP                ; INIZIALIZZA DS E ES
        MOV AH,09H      ; STAMPA DI UNA STRINGA A VIDEO
        MOV DX,OFFSET inp
        INT 21h
        
        CALL LETNUM
        MOV AX,_NUMINT
        PUSH AX
        PUSH 1
        
        CALL FACTOR
        
        MOV AH,09H   
        MOV DX,OFFSET oup
        INT 21h

        POP _FATT
        MOV AX,_FATT
        MOV _NUMINT,AX
        CALL STNUM
        
        JMP fineprg     ; SALTO INCONDIZIONATO ALLA FINE DEL PROGRAMMA
            
        
FACTOR PROC
        POP _FATT
        POP _CONT
        
        CMP _CONT,1
        JBE FINP
        
        MOV AX,_CONT
        MOV BX,_FATT
        MUL BX 
        
        MOV _FATT,AX
        DEC _CONT
        PUSH _CONT
        PUSH _FATT
        
        ;CALL FACTOR
FINP:
        RET
FACTOR ENDP
        
LETNUM PROC             ; PROCEDURA DI LETTURA NUMERO INTERO WORD
        PUSH AX         ; SALVO NELLA STACK IL VALORE CONTENUTO NEL REGISTRO AX
        PUSH BX         ; SALVO NELLA STACK IL VALORE CONTENUTO NEL REGISTRO BX
                        ; UTILIZZA LA VARIABILE _DIECI = 10
        MOV BX,0        ; AZZERO IL REGISTRO CHE CONTIENE IL NUMERO LETTO
_cick1: MOV AH,01h      ; LETTURA DI UN CARATTERE
        INT 21H
        CMP al,0dh      ; SE IL CARATTERE LETTO E' INVIO ALLORA FINE CICLO
        JE _endk1
        PUSH ax         ; SALVO COPIA DEL NUMERO LETTO
        MOV ax,bx       ; MOLTIPLICO IL NUMERO ACCUMULATO IN BX PER 10 (SPOSTO CIFRE A SINISTR)
        MUL _DIECI
        MOV bx,ax       ; METTO IN BX IL NUMERO SPOSTATO A SINISTRA DI UNA CIFRA
        POP ax          ; RIPRENDO CIFRA APPENA LETTA
        SUB al,30h      ; SOTTRAGGO ASCII DI 0 (PER AVERE NUMERO REALE)
        MOV ah,0        ; SOMMO NUOVO CIFRA AL NUMERO LETTO (TOTALE CIFRE GIA' SPOSTATE A SINISTRA)
        ADD bx, ax
        JMP _cick1
_endk1: MOV _NUMINT,bx  ; METTO IN _NUMINT IL NUMERO LETTO

        POP bx          ; RECUPERO DALLO STACK IL VALORE ORIGINARIO DI BX IN MODO DA NON APPORTARE MODIFICHE AL PROGRAMMA PRINCIPALE
        POP ax          ; RECUPERO DALLO STACK IL VALORE ORIGINARIO DI AX IN MODO DA NON APPORTARE MODIFICHE AL PROGRAMMA PRINCIPALE

        RET
LETNUM ENDP             ; FINE PROCEDURA LETNUM - LETTURA NUMERO INTERO WORD


STNUM PROC              ; PROCEDURA DI STAMPA NUMERO INTERO WORD
                        ; IL NUMERO DA STAMPARE DEVE TROVARSI NELLA VARIABILE _NUMINT
        PUSH AX         ; SALVO NELLA STACK IL VALORE CONTENUTO NEL REGISTRO AX    
        PUSH CX         ; SALVO NELLA STACK IL VALORE CONTENUTO NEL REGISTRO CX
        PUSH DX         ; SALVO NELLA STACK IL VALORE CONTENUTO NEL REGISTRO DX
        
        MOV AX,_NUMINT
        MOV CL,00       ; CONTATORE CIFRE
estraz: MOV DX,0        ; CICLO ESTRAZI0NE CIFRA. AZZERA PARTE ALTA DEL DIVIDENDO (DX:AX)
        DIV _DIECI      ; DIVISIONE (DX:AX/10) QUOZIONTE IN AX RESTO IN DX
        PUSH DX         ; SALVATAGGIO RESTO (CIFRA ESTRATTA) NELLO STACK
        INC CL          ; AGGIORNA CONTATORE CIFRE
        CMP AX,0        ; CONTROLLA SE CI SONO ALTRE CIFRE OPPURE 0
        JNE estraz      ; RIPETI FICHE' CI SONO CIFRE SIGNIFICATIVE (DIVERSE DA 0)
stamp:  POP DX          ; INIZIO CICLO STAMPA CIFRE ORDINE INVERSO
        ADD DL,30h      ; SOMMA ASCII CARATTERE 0
        MOV AH,02h      ; STAMPA CIFRA
        INT 21h
        DEC CL          ; DECREMENTA IL CONTATORE CIFRE DA STAMPARE
        JNZ stamp       ; RIPETI FINCHE' CI SONO CIFRE DA STAMPARE
        
        POP DX          ; RECUPERO DALLO STACK IL VALORE ORIGINARIO DI DX IN MODO DA NON APPORTARE MODIFICHE AL PROGRAMMA PRINCIPALE
        POP CX          ; RECUPERO DALLO STACK IL VALORE ORIGINARIO DI CX IN MODO DA NON APPORTARE MODIFICHE AL PROGRAMMA PRINCIPALE
        POP AX          ; RECUPERO DALLO STACK IL VALORE ORIGINARIO DI AX IN MODO DA NON APPORTARE MODIFICHE AL PROGRAMMA PRINCIPALE
        
        RET
STNUM ENDP     
 
fineprg:MOV AH,4CH      ; AH = 4CH (FINE ESECUZIONE ASSEMBLY)
        INT 21H         ; CHIAMATA ALL'INTERRUPT DOS
END                     ; FINE DEL PRIGRAMMA 